<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data (GDP Per Capita)' inline='true' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP Per Capita' name='excel-direct.0m2l9t41djgrk414xdtsm0xq1zfe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Downloads/GDP Per Capita.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0m2l9t41djgrk414xdtsm0xq1zfe' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:T266:no:A1:T266:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Continent' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
            <column datatype='string' name='Indicator Name' ordinal='4' />
            <column datatype='real' name='2010' ordinal='5' />
            <column datatype='real' name='2011' ordinal='6' />
            <column datatype='real' name='2012' ordinal='7' />
            <column datatype='real' name='2013' ordinal='8' />
            <column datatype='real' name='2014' ordinal='9' />
            <column datatype='real' name='2015' ordinal='10' />
            <column datatype='real' name='2016' ordinal='11' />
            <column datatype='real' name='2017' ordinal='12' />
            <column datatype='real' name='2018' ordinal='13' />
            <column datatype='real' name='2019' ordinal='14' />
            <column datatype='real' name='2020' ordinal='15' />
            <column datatype='real' name='2021' ordinal='16' />
            <column datatype='real' name='2022' ordinal='17' />
            <column datatype='real' name='2023' ordinal='18' />
            <column datatype='real' name='2024' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T266:no:A1:T266:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Indicator Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2020]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2020</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2021]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2021</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2022</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2022]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2022</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2023</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2023]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2023</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2024</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2024]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>2024</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_4EC2008A57D44EC5B188D03448FBEBB5]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/user/AppData/Local/Temp/TableauTemp/#TableauTemp_1rziqm50s6j0pf1d4vzs505vj886.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/14/2025 04:02:45 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>0</ordinal>
              <family>Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>265</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>1</ordinal>
              <family>Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>265</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>2</ordinal>
              <family>Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>3</ordinal>
              <family>Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator Name</remote-alias>
              <ordinal>4</ordinal>
              <family>Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2010</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2010]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2010</remote-alias>
              <ordinal>5</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2011</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2011]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2011</remote-alias>
              <ordinal>6</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2012]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2012</remote-alias>
              <ordinal>7</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2013]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2013</remote-alias>
              <ordinal>8</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2014</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2014]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2014</remote-alias>
              <ordinal>9</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2015</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2015]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2015</remote-alias>
              <ordinal>10</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2016</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2016]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2016</remote-alias>
              <ordinal>11</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2017</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2017</remote-alias>
              <ordinal>12</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2018</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2018]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2018</remote-alias>
              <ordinal>13</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2019</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2019]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2019</remote-alias>
              <ordinal>14</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2020</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2020]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2020</remote-alias>
              <ordinal>15</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2021</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2021]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2021</remote-alias>
              <ordinal>16</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2022</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2022]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2022</remote-alias>
              <ordinal>17</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2023</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2023]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2023</remote-alias>
              <ordinal>18</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>248</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2024</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2024]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2024</remote-alias>
              <ordinal>19</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>231</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_4EC2008A57D44EC5B188D03448FBEBB5]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='300' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Data' id='Data_4EC2008A57D44EC5B188D03448FBEBB5'>
            <properties context=''>
              <relation connection='excel-direct.0m2l9t41djgrk414xdtsm0xq1zfe' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:T266:no:A1:T266:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Continent' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                  <column datatype='string' name='Indicator Name' ordinal='4' />
                  <column datatype='real' name='2010' ordinal='5' />
                  <column datatype='real' name='2011' ordinal='6' />
                  <column datatype='real' name='2012' ordinal='7' />
                  <column datatype='real' name='2013' ordinal='8' />
                  <column datatype='real' name='2014' ordinal='9' />
                  <column datatype='real' name='2015' ordinal='10' />
                  <column datatype='real' name='2016' ordinal='11' />
                  <column datatype='real' name='2017' ordinal='12' />
                  <column datatype='real' name='2018' ordinal='13' />
                  <column datatype='real' name='2019' ordinal='14' />
                  <column datatype='real' name='2020' ordinal='15' />
                  <column datatype='real' name='2021' ordinal='16' />
                  <column datatype='real' name='2022' ordinal='17' />
                  <column datatype='real' name='2023' ordinal='18' />
                  <column datatype='real' name='2024' ordinal='19' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 20 Countries by GDP Per Capita in 2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2010])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Africa Eastern and Southern&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Africa Western and Central&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;American Samoa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Andorra&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Angola&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Antigua and Barbuda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Arab World&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahamas, The&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;British Virgin Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cabo Verde&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Caribbean small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cayman Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chad&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Channel Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Comoros&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Dem. Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Curacao&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Djibouti&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominica&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Early-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Egypt, Arab Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Equatorial Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eswatini&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Euro area&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;European Union&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Faroe Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;French Polynesia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gambia, The&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greenland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guam&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guyana&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Haiti&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;High income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hong Kong SAR, China&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IBRD only&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA blend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA only&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA total&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Isle of Man&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kiribati&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Dem. People&apos;s Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kyrgyz Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lao PDR&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Late-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Low &amp; middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Low income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lower middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Macao SAR, China&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Marshall Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan (IDA &amp; IBRD)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Moldova&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nauru&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Caledonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North America&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Northern Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;OECD members&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Other small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pacific island small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Palau&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Post-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Puerto Rico (US)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russian Federation&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;San Marino&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sao Tome and Principe&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovak Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Kitts and Nevis&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Lucia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Martin (French part)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Suriname&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syrian Arab Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Timor-Leste&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tonga&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tuvalu&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Upper middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Venezuela, RB&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Viet Nam&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;West Bank and Gaza&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;World&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen, Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2010:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2010:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2010:qk]' scope='rows' value='GDP Per Capita in $' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2010:qk]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{6E755BBB-D773-4A8C-9C8A-32B46B58C54C}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 20 Countries by Highest GDP per Capita in 2024</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='real' name='[2024]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2024]' derivation='Sum' name='[sum:2024:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2010])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' included-values='all' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[Longitude (generated)]' field-type='quantitative' max='19769752.623536304' min='-10876649.432813341' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[Latitude (generated)]' field-type='quantitative' max='7282780.8898150735' min='-6293214.1108223852' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute' value='true' />
            <format attr='enabled' id='light-admin-0-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-1st-tier' value='true' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='marine-label-sm-ln' value='true' />
            <format attr='enabled' id='marine-label-sm-pt' value='true' />
            <format attr='enabled' id='marine-label-md-ln' value='true' />
            <format attr='enabled' id='marine-label-md-pt' value='true' />
            <format attr='enabled' id='marine-label-lg-ln' value='true' />
            <format attr='enabled' id='marine-label-lg-pt' value='true' />
            <format attr='enabled' id='water-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' />
              <lod column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' />
              <geometry column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[Latitude (generated)]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2D8F0CB4-6103-4CEA-9898-9943B46DBAFB}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 20 Countries by Lowest GDP per Capita in 2024 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2024]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2024]' derivation='Sum' name='[sum:2024:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]'>
            <groupfilter count='20' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2024])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' included-values='in-range-or-null'>
            <min>-26.557526453000001</min>
            <max>43.372009478000003</max>
          </filter>
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute' value='true' />
            <format attr='enabled' id='light-admin-0-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-1st-tier' value='true' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='marine-label-sm-ln' value='true' />
            <format attr='enabled' id='marine-label-sm-pt' value='true' />
            <format attr='enabled' id='marine-label-md-ln' value='true' />
            <format attr='enabled' id='marine-label-md-pt' value='true' />
            <format attr='enabled' id='marine-label-lg-ln' value='true' />
            <format attr='enabled' id='marine-label-lg-pt' value='true' />
            <format attr='enabled' id='water-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' />
              <color column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' />
              <geometry column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[Latitude (generated)]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{492D17D5-9859-4AAB-87CE-0AE4E3D59B85}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 20 Countries by GDP Per Capita in 2011</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='real' name='[2011]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2010])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2011:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2011:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2011:qk]' scope='rows' value='GDP Per Capita in $' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2011:qk]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{F0E599FA-6417-4995-9D85-38D1C7F22040}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 20 Countries by GDP Per Capita in 2012</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2012]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Code]' derivation='None' name='[none:Country Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Code:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2012])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2012:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Code:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2012:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2012:qk]' scope='rows' value='GDP Per Capita in $' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2012:qk]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Code:nk]</cols>
      </table>
      <simple-id uuid='{A636F514-35CF-4397-BB6D-9CB29682ADF5}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top Region by GDP per Capita in 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2014]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2014:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2014:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2014:qk]' scope='rows' value='GDP per Capita in $' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2014:qk]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{E451BC59-E05F-4EA3-B10A-66275D50C1FA}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 20 Countries by GDP per Capita in 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2015]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[2015]' derivation='Sum' name='[sum:2015:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2015])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa &amp; Asia&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Asia &amp; Oceania&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Central Asia&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Eurasia( Europe &amp; Asia)&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;North &amp; South America&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;North America&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Oceania&quot;' />
                  <groupfilter function='member' level='[none:Continent:nk]' member='&quot;South America&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2015:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2015:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2015:qk]' scope='rows' value='GDP per Capita in $' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2015:qk]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{6915A361-E590-4510-8A9A-1AC6BE0B6C1B}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 20 Countries by GDP per Capita in 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020]' derivation='Sum' name='[sum:2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Africa Eastern and Southern&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Africa Western and Central&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;American Samoa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Andorra&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Angola&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Antigua and Barbuda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Arab World&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahamas, The&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;British Virgin Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cabo Verde&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Caribbean small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cayman Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chad&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Channel Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Comoros&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Dem. Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Curacao&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Djibouti&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominica&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Early-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Egypt, Arab Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Equatorial Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eswatini&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Euro area&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;European Union&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Faroe Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;French Polynesia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gambia, The&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greenland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guam&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guyana&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Haiti&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;High income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hong Kong SAR, China&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IBRD only&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA blend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA only&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA total&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Isle of Man&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kiribati&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Dem. People&apos;s Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kyrgyz Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lao PDR&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Late-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Low &amp; middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Low income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lower middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Macao SAR, China&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Marshall Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan (IDA &amp; IBRD)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Moldova&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nauru&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Caledonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North America&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Northern Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;OECD members&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Other small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pacific island small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Palau&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Post-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Puerto Rico (US)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russian Federation&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;San Marino&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sao Tome and Principe&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovak Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Kitts and Nevis&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Lucia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Martin (French part)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Suriname&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syrian Arab Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Timor-Leste&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tonga&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tuvalu&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Upper middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Venezuela, RB&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Viet Nam&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;West Bank and Gaza&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;World&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen, Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2020:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2020:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2020:qk]' scope='rows' value='GDP per Capita in $' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2020:qk]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{6E4B1D67-6A59-475B-8F6E-8FE330255824}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 20 Countries by GDP per Capita in 2024</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2024]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2024]' derivation='Sum' name='[sum:2024:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2024])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Africa Eastern and Southern&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Africa Western and Central&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;American Samoa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Andorra&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Angola&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Antigua and Barbuda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Arab World&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahamas, The&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;British Virgin Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brunei Darussalam&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cabo Verde&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Caribbean small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cayman Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chad&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Channel Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Comoros&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Dem. Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Curacao&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Djibouti&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominica&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Early-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Egypt, Arab Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Equatorial Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eswatini&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Euro area&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;European Union&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Faroe Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;French Polynesia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gambia, The&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gibraltar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greenland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guam&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guyana&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Haiti&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;High income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hong Kong SAR, China&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IBRD only&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA blend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA only&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA total&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Isle of Man&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kiribati&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Dem. People&apos;s Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kyrgyz Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lao PDR&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Late-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Low &amp; middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Low income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lower middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Macao SAR, China&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Marshall Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East, North Africa, Afghanistan &amp; Pakistan (IDA &amp; IBRD)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Moldova&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nauru&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Caledonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North America&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Northern Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;OECD members&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Other small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pacific island small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Palau&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Post-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Puerto Rico (US)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russian Federation&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;San Marino&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sao Tome and Principe&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovak Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Small states&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Kitts and Nevis&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Lucia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Martin (French part)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Suriname&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syrian Arab Republic&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Timor-Leste&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tonga&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkiye&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tuvalu&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Upper middle income&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Venezuela, RB&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Viet Nam&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;West Bank and Gaza&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;World&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen, Rep.&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' scope='rows' value='GDP per Capita in $' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{C0642E9E-0953-459F-BBEA-7A88C141ACD8}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Continents GDP per Capita in 2024</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2024]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[2024]' derivation='Sum' name='[sum:2024:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' scope='rows' value='GDP per Capita in $' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{AE286D1E-EFC7-4B2E-B379-0852813C5FFA}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Regions with GDP per Capita in 2024</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
          </datasources>
          <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
            <column datatype='real' name='[2024]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[2024]' derivation='Sum' name='[sum:2024:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]</column>
            <column>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' scope='rows' value='GDP per Capita in $' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]</rows>
        <cols>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{486769F8-F19A-4EE1-94A5-AE0D5A8D17DC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='GDP Per Capita of the World'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>GDP Per Capita of the World Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='1260' maxwidth='1920' minheight='460' minwidth='1620' sizing-mode='range' />
      <datasources>
        <datasource caption='Data (GDP Per Capita)' name='federated.0vjc2hn0yeynhf18qayjc0k4fl3r' />
      </datasources>
      <datasource-dependencies datasource='federated.0vjc2hn0yeynhf18qayjc0k4fl3r'>
        <column datatype='real' name='[2010]' role='measure' type='quantitative' />
        <column datatype='real' name='[2024]' role='measure' type='quantitative' />
        <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
        <column-instance column='[2024]' derivation='Sum' name='[sum:2024:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97496' id='20' param='vert' type-v2='layout-flow' w='99012' x='494' y='1252'>
            <zone h='6416' id='21' type-v2='title' w='99012' x='494' y='1252'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91080' id='18' param='vert' type-v2='layout-flow' w='99012' x='494' y='7668'>
              <zone h='91080' id='7' param='horz' type-v2='layout-flow' w='99012' x='494' y='7668'>
                <zone h='91080' id='5' type-v2='layout-basic' w='89135' x='494' y='7668'>
                  <zone h='45531' id='3' name='Sheet 1' w='44557' x='494' y='7668'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45549' id='10' name='Sheet 10' w='44557' x='494' y='53199'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45531' id='13' name='Sheet 11' w='44578' x='45051' y='7668'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45549' id='14' name='Sheet 9' w='44578' x='45051' y='53199'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='91080' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9877' x='89629' y='7668'>
                  <zone h='10798' id='8' name='Sheet 1' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2010:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9877' x='89629' y='7668'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='19770' id='9' name='Sheet 1' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' type-v2='filter' w='9877' x='89629' y='18466'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='19770' id='11' name='Sheet 10' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' type-v2='filter' w='9877' x='89629' y='38236'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='10172' id='12' name='Sheet 10' pane-specification-id='6' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' type-v2='color' w='9877' x='89629' y='58006'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='10798' id='15' name='Sheet 9' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9877' x='89629' y='68178'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='19772' id='16' name='Sheet 9' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]' type-v2='filter' w='9877' x='89629' y='78976'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>GDP Per Capita of the World Countries</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97496' id='24' param='vert' type-v2='layout-flow' w='99012' x='494' y='1252'>
                <zone h='6416' id='21' type-v2='title' w='99012' x='494' y='1252'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10798' id='8' name='Sheet 1' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2010:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9877' x='89629' y='7668'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19770' id='9' mode='checkdropdown' name='Sheet 1' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' type-v2='filter' w='9877' x='89629' y='18466'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45531' id='3' is-fixed='true' name='Sheet 1' w='44557' x='494' y='7668'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45531' id='13' is-fixed='true' name='Sheet 11' w='44578' x='45051' y='7668'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19770' id='11' mode='checkdropdown' name='Sheet 10' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' type-v2='filter' w='9877' x='89629' y='38236'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45549' id='10' is-fixed='true' name='Sheet 10' w='44557' x='494' y='53199'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10172' id='12' name='Sheet 10' pane-specification-id='6' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' type-v2='color' w='9877' x='89629' y='58006'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10798' id='15' name='Sheet 9' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9877' x='89629' y='68178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19772' id='16' mode='checkdropdown' name='Sheet 9' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]' type-v2='filter' w='9877' x='89629' y='78976'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45549' id='14' is-fixed='true' name='Sheet 9' w='44578' x='45051' y='53199'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3856C6B7-3DBD-4523-A34A-32F75EAD1544}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2010:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Code:nk]</field>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91486091-0EE8-46E9-9C8D-258BAE46EA60}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2011:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD652E21-0840-43BF-8F8D-97B190E4C0CD}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2012:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Code:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Code:nk]</field>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{861D59DD-BEE6-48A8-BA9D-6854FC8AD93E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2014:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{419BA90B-8177-4869-87BE-4CAE0F02C277}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2015:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A32C9654-19D0-484A-AA6E-492E5802A991}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2020:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1FE545F-4937-4054-A622-EFFA76F0BC8E}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[:Measure Names]</field>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C659183-5455-4D8A-A8F5-7CE63B6D04DC}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84A710BD-1DEB-4EE1-B2AB-2C46D16DC004}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9115FDEC-3CC1-4854-8A43-6572C3EA6E59}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]' type='filter' />
            <card pane-specification-id='6' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</field>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Region:nk]</field>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FAEE8720-D3BB-4234-A6F7-843C40610585}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[sum:2024:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vjc2hn0yeynhf18qayjc0k4fl3r].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D42530F-F0C2-462F-83D1-0CAF0DA74522}' />
    </window>
    <window class='dashboard' maximized='true' name='GDP Per Capita of the World'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Sheet 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 11'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 9'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AB912424-C882-4620-818C-55FFB23B1BD7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP Per Capita of the World' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      ddYdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      fkzktPx/Ly+pRHMj9yEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      EkSFxC9ELS4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      uT+QpqnnfwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      h/n/lWQ/JO1Hf6UAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
